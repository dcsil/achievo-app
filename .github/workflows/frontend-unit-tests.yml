name: Frontend Unit/Component Tests

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-unit-tests.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-unit-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run tests with coverage
        working-directory: ./frontend
        run: npm run test:coverage
        env:
          CI: true

      - name: Check coverage thresholds
        working-directory: ./frontend
        run: |
          echo "Checking coverage thresholds..."
          
          # Create a Node.js script to check coverage thresholds
          cat > check-coverage.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          
          const THRESHOLD = 70;
          
          try {
            const coveragePath = path.join(__dirname, 'coverage', 'coverage-summary.json');
            const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
            
            const metrics = {
              lines: coverage.total.lines.pct,
              statements: coverage.total.statements.pct,
              functions: coverage.total.functions.pct,
              branches: coverage.total.branches.pct
            };
            
            console.log('Coverage Results:');
            console.log(`  Lines: ${metrics.lines}%`);
            console.log(`  Statements: ${metrics.statements}%`);
            console.log(`  Functions: ${metrics.functions}%`);
            console.log(`  Branches: ${metrics.branches}%`);
            console.log('');
            
            let failed = false;
            
            Object.entries(metrics).forEach(([metric, value]) => {
              if (value < THRESHOLD) {
                console.log(`❌ ${metric.charAt(0).toUpperCase() + metric.slice(1)} coverage (${value}%) is below ${THRESHOLD}%`);
                failed = true;
              } else {
                console.log(`✅ ${metric.charAt(0).toUpperCase() + metric.slice(1)} coverage (${value}%) meets threshold`);
              }
            });
            
            if (failed) {
              console.log('');
              console.log(`💥 Coverage check failed! All coverage metrics must be at least ${THRESHOLD}%`);
              process.exit(1);
            } else {
              console.log('');
              console.log('🎉 All coverage thresholds met!');
            }
          } catch (error) {
            console.error('❌ Error reading coverage summary:', error.message);
            process.exit(1);
          }
          EOF
          
          # Run the coverage check
          node check-coverage.js

      - name: Display coverage summary
        working-directory: ./frontend
        run: |
          echo "Test Coverage Summary:"
          if [ -f coverage/lcov-report/index.html ]; then
            echo "Coverage report generated successfully"
          else
            echo "Coverage report not found"
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: ./frontend/coverage